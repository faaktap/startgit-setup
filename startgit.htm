<!DOCTYPE HTML>
<html>

<head>
<title>-----------------TITLE--------------------</title>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1">

<meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
<meta http-equiv="Pragma" content="no-cache" />
<meta http-equiv="Expires" content="0" />

<meta name="author" CONTENT="ZMLRekenaars">
<meta http-equiv="CONTENT-LANGUAGE" CONTENT="en-US,af">

<meta name="description" content="words,words,words,words">
<meta name="keywords" content="words,words,words">

<style>
.divc {
  margin: auto;
  width: 80%;
  border: 3px solid lightblue;
  padding: 15px;
}
</style>
</head>

<body>
<div class=divc>
<h1>Hello World</h1>
<h2>Hello World</h2>
<h3>Hello World</h3>
</div>
  
  
  <pre>
  https://git-scm.com/book/en/v2/Getting-Started-Getting-Help

git config --global user.name "Fakie Tap"
git config --global user.email faaktap@gmail.com
git config --global core.editor "C:\Program Files\Notepad++\notepad++.exe"
git config --list

//store your username and password locally faaktap, ******
git config --global credential.helper store


git help <verb>
git <verb> --help
like : git add -h

md testgit
cd testgit
git clone https://github.com/faaktap/sandbox.git

git status

echo 'My Project' > newfile.txt
git add newfile.txt

git status -s  (short explaination)

git commit 
or
git commit -m "Story 182: fix benchmarks for speed"
or
git commit -m "Test a quick commit"

git rm newfile.txt  (will delete the file from repository)

git log  (show activity)

create a file called .gitignore, and add stuff in to ignore.
Here is another example .gitignore file:
# ignore all .a files
*.a
# but do track lib.a, even though you're ignoring .a files above
!lib.a
# only ignore the TODO file in the current directory, not subdir/TODO
/TODO
# ignore all files in any directory named build
build/
# ignore doc/notes.txt, but not doc/server/arch.txt
doc/*.txt
# ignore all .pdf files in the doc/ directory and any of its subdirectories
doc/**/*.pdf



# New local repository
git init
git add .
git commit -m "Initial commit"

# New remote repository
# Create remote repository (likely on github), then:
git remote add origin https://github.com/username/new_repo #https
git remote add origin https://github.com/faaktap/dkhs.git
git remote add origin git@github.com:username/new_repo #ssh
# Now push
git push -u origin master



git add .
git commit -m "message for the commit"
git remote add origin https://github.com/faaktap/zmlShop
git push origin master

</pre>
</body>
